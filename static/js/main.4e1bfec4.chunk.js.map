{"version":3,"sources":["Header.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","href","className","target","id","Main","Output","Input","props","openTab","bind","state","tabLinks","clicked","tab","area","this","console","log","tabcontent","document","querySelectorAll","i","length","style","display","querySelector","setState","tabs","Object","keys","React","Component","TabMenu","defaultOpen","click","map","btn","Tab","key","value","text","onClick","TabContent","content","InputArea","DetailArea","DetailRow","label","htmlFor","type","toUpperCase","slice","replace","TlArea","Buttons","copyToClip","copied","select","execCommand","ActionButton","Index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4e1bfec4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>\r\n      <a href=\"index.html\">DREAM!ing STORY FORMATTER</a>\r\n      </h1>\r\n      <div className=\"horizontal\">\r\n        <p>\r\n          A website to more easily upload event/gacha stories from the mobile idol game Ensemble Stars to the fandom wiki.\r\n          <br />It takes formats your story chapter into text that can be pasted directly into the \"source\"\r\n        section of the page.\r\n          <br />Developed by <a target=\"_blank\" href=\"https://twitter.com/gayandasleep\">midori</a>.\r\n        </p>\r\n        <ul id=\"navbar\">\r\n          <li><a href=\"./howto.html\">HOW TO USE</a></li>\r\n          <li><a href=\"./plans.html\">DESIGN PLANS</a></li>\r\n          <li><a target=\"_blank\" href=\"https://goo.gl/forms/Xu42LLAgWKxVYV873\">FEEDBACK</a></li>\r\n        </ul>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header.js';\r\n// import convertText from './convertText.js'\r\n\r\nfunction Index() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className='main'>\r\n      <Input />\r\n      <Buttons />\r\n      <Output />\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.openTab = this.openTab.bind(this);\r\n    this.state = {\r\n      tabLinks: {\r\n        'Text': 'inputArea',\r\n        'Details': 'detailArea',\r\n        'TL Notes': 'tlArea',\r\n      },\r\n      clicked: ''\r\n    }\r\n  }\r\n\r\n  openTab(tab) {\r\n    const area = '#' + this.state.tabLinks[tab]\r\n    console.log(tab, area);\r\n    const tabcontent = document.querySelectorAll('.tabcontent');\r\n    for (let i = 0; i < tabcontent.length; i++) {\r\n      tabcontent[i].style.display = 'none';\r\n    }\r\n    document.querySelector(area).style.display = 'block';\r\n    this.setState({ clicked: tab })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='input'>\r\n        <TabMenu tabs={Object.keys(this.state.tabLinks)} clicked={this.state.clicked} openTab={this.openTab} />\r\n        <InputArea />\r\n        <DetailArea />\r\n        <TlArea />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TabMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      defaultOpen: 'Text',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.querySelector(`[value='${this.state.defaultOpen}']`).click();\r\n  }\r\n\r\n  render() {\r\n    const tabs = this.props.tabs.map((btn) =>\r\n      <Tab key={btn}\r\n        value={btn}\r\n        className={'tablink' + (this.props.clicked === btn ? ' active' : '')}\r\n        text={btn}\r\n        onClick={() => this.props.openTab(btn)}\r\n      />\r\n    )\r\n    return <div className='tabMenu'>{tabs}</div>;\r\n  }\r\n}\r\n\r\nfunction Tab(props) {\r\n  return (\r\n    <button className={props.className} value={props.value} onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nclass TabContent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id={this.props.id} className='tabcontent'>\r\n        {this.props.content}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass InputArea extends React.Component {\r\n  render() {\r\n    const content = (\r\n      <div id='inputEditor' className='editor'>\r\n        <p>If this is your first time using the formatter, please check the <a href='./howto.html'>Text Guidelines</a> to make sure your text is ready.</p>\r\n        <p>UPDATE: Header images, CGs, and scene change headings can now be included. Please check Text Guidelines for more info.</p>\r\n      </div>\r\n    )\r\n    return <TabContent id={'inputArea'} content={content} />\r\n  }\r\n}\r\n\r\nclass DetailArea extends React.Component {\r\n  render() {\r\n    const content = (\r\n      <>\r\n        <div className='row'>\r\n          <h3>Story Details</h3>\r\n        </div>\r\n        <DetailRow label='Title' />\r\n        <DetailRow label='Header Image' />\r\n        <DetailRow label='Source' />\r\n        <DetailRow label='Translator' />\r\n        <div className='row'>\r\n          <span className='spacer'></span>\r\n          <label className='spacer' htmlFor='tlLink'>Translator credit link</label>\r\n        </div>\r\n        <div className='row'>\r\n          <span className='spacer'></span>\r\n          <input type='text' id='tlLink' />\r\n        </div>\r\n      </>\r\n    )\r\n    return <TabContent id={'detailArea'} content={content} />\r\n  }\r\n}\r\n\r\nfunction DetailRow(props) {\r\n  const id = props.label[0].toUpperCase() + props.label.slice(1, props.label.length).replace(' ', '')\r\n  return (\r\n    <div className='row'>\r\n      <label className='spacer'>{props.label}</label>\r\n      <input type='text' id={id} />\r\n    </div>\r\n  )\r\n}\r\n\r\nclass TlArea extends React.Component {\r\n  render() {\r\n    const content = (\r\n      <div id='tlEditor' className='editor'>\r\n        <p>If this is your first time using the formatter, please check the <a href='./howto.html#tlNotesSection'>Text Guidelines</a> for how to add translation notes.</p>\r\n      </div>\r\n    )\r\n    return <TabContent id={'tlArea'} content={content} />\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.copyToClip = this.copyToClip.bind(this)\r\n    this.state = {\r\n      copied: false,\r\n    }\r\n  }\r\n\r\n  copyToClip() {\r\n    document.querySelector('#output').select();\r\n    document.execCommand('copy');\r\n    this.setState({ copied: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='btnArea'>\r\n        <ActionButton onClick={() => console.log('convert text')} id='convertBtn' text='CONVERT' />\r\n        <ActionButton onClick={this.copyToClip} id='copyBtn' text={this.state.copied ? 'Copied' : 'Copy Output'} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction ActionButton(props){\r\n  return (\r\n    <button onClick={props.onClick} id={props.id}>{props.text}</button>\r\n  )\r\n}\r\n\r\nfunction Output(props) {\r\n  return <textarea id='output'></textarea>\r\n}\r\n\r\n\r\nexport default Index;","import React from 'react';\nimport Index from './Main.js';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Index />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}